app:
  demo:
    enabled: false #mvn --% spring-boot:run -Dspring-boot.run.arguments=" --app.demo.enabled=true"
  verify:
    enabled: false #mvn --% spring-boot:run -Dspring-boot.run.arguments=" --app.verify.enabled=true"


spring:
  main:
    web-application-type: none  #'none' for simple applicication, 'servlet' for spring boot.


# write *everything* to a single file
logging:
  file:
    name: logs/app.log        # relative to project dir (or use an absolute path)
  level:
    com.example.fhirclient: INFO
    # turn this on to ensure the raw URL lines show up:
    com.example.fhirclient.interceptors.RawUrlLoggerIntc: INFO

fhir-server:
  base-url: https://hapi.fhir.org/baseR4        # WireMock or real server
  connect-timeout-ms: 5000
  socket-timeout-ms: 15000

security:
  oauth2:
    enabled: false
    provider: local
    token-uri: https://idp.example.com/realms/acme/protocol/openid-connect/token
    client-id: my-client
    client-secret: ${OAUTH_CLIENT_SECRET:changeme}
    scope: "system/*.read"

interceptors:
  logging:
    enabled: true
    log-request-body: false
    log-response-body: false
  request-id:
    enabled: true
    header-name: X-Request-Id
  timing:
    enabled: true
  raw-url:
    enabled: true     # <-- this turns on the RawUrlLoggerIntc bean

fhir-search-ymls:
  packs: classpath:searches/core.searches.yml  #if multiple, use comma delimited list


fhir-request-retry:
  enabled: true
  max-attempts: 3
  backoff-ms: 300

# picks up via System.getProperty if present, but you can also do:
hapi:
  caching:
    provider: caffeine